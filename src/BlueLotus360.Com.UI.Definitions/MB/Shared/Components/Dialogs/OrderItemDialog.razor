<MudDialog @bind-IsVisible="@IsEditPopShown">
	<TitleContent>
		<MudText Typo="Typo.h6" Class="dc1">
			<MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1" />
			@HeadingPopUp
		</MudText>
	</TitleContent>
	<DialogContent>
		<MudContainer Style="overflow-y: scroll; max-height:450px;padding:16px;" Class="dc2">
			<MudList Clickable="false">
				@foreach (var item in Validaor.UserMessages.UserMessages)
				{
					<MudListItem Style="Color:darkred"  Text="@item.Message"   Icon="@Icons.Material.Filled.Error" />
				}
			</MudList>
			@{
				var addBtn = ModalUIElement.Children.Where(x => x._internalElementName != null && x._internalElementName.Equals("AddItemToGrod")).FirstOrDefault();
				var cancelBtn = ModalUIElement.Children.Where(x => x._internalElementName != null && x._internalElementName.Equals("CancelItemPopup")).FirstOrDefault();

				if (addBtn != null && cancelBtn != null)
				{
				    ModalUIElement.Children.Remove(addBtn);
				    ModalUIElement.Children.Remove(cancelBtn);

				}
			}
			@if(ModalUIElement!=null){
				<UIRenderere FromSection="ModalUIElement" DataObject="OrderItem" InteractionLogics="InteractionLogics" ObjectHelpers="ObjectHelpers" />
			}
			
		</MudContainer>

	</DialogContent>

	<DialogActions>
		<MudButton OnClick="Cancel">Cancel</MudButton>
		<MudButton Color="Color.Secondary" OnClick="AddItem">@ButtonName</MudButton>
	</DialogActions>
</MudDialog>




